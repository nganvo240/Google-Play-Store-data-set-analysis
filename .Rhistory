knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message= FALSE)
googlePlay$Content.Rating<-ifelse(googlePlay$googlePlay=='Everyone','Non-restricted','Restricted')
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message= FALSE)
library(tidyverse)
library(ggplot2)
ggAppData <- read.csv("./Data/googleplaystore.csv")
str(ggAppData)
googlePS <-as.data.frame(ggAppData)
googlePlay <- googlePS[complete.cases(googlePS),]
#Kiểm tra và xóa giá trị nhập lỗi trong dataset
googlePlay<-googlePlay[googlePlay$Rating<=5,]
q1<-googlePlay[googlePlay$Category==c('GAME','BUSINESS','EDUCATION','ENTERTAINMENT','LIFESTYLE','DATING'),]
## Side by side boxplot
ggplot(data = q1, aes(x = Category, y = Rating),ylim=c(0,5)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa các danh mục ứng dụng")
# Biểu đồ Histogram
xbar <- tapply(q1$Rating, q1$Category, mean)
s <- tapply(q1$Rating, q1$Category, sd)
q1$normal.density <- apply(q1, 1, function(x){
dnorm(as.numeric(x["Rating"]),
xbar[x["Category"]], s[x["Category"]])})
ggplot(q1, aes(x = Rating)) +
geom_histogram(aes(y = ..density..),
bins = 20,
fill = "grey", col = "black") +
facet_grid(Category ~ .) +
geom_density(col = "red", lwd = 1) +
geom_line(aes(y = normal.density), col = "blue", lwd = 1) +
ggtitle("Biểu đồ hàm mật độ phân phối xác suất")
# Biểu đồ QQ plot
q1$intercept <- apply(q1, 1, function(x){xbar[x["Category"]]})
q1$slope <- apply(q1, 1, function(x){s[x["Category"]]})
ggplot(q1, aes(sample = Rating)) +
stat_qq() +
facet_grid(Category ~ .) +
geom_abline(data = q1, aes(intercept = intercept, slope = slope)) +
ggtitle("Biểu đồ QQPlot so sánh phân bố các mẫu với phân phối chuẩn")
# ANOVA test
fit <- aov(Rating ~ Category, data = q1)
summary(fit)
TukeyHSD(fit, conf.level = 0.95)
googlePlay$Content.Rating<-ifelse(googlePlay$googlePlay=='Everyone','Non-restricted','Restricted')
googlePlay$Content.Rating<-ifelse(googlePlay$googlePlay=='Everyone','Non-restricted','Restricted')
googlePlay$Content.Rating<-ifelse(googlePlay$googlePlay=='Everyone','Non-restricted','Restricted')
googlePlay$Content.Rating<-ifelse(googlePlay$googlePlay=='Everyone','Non-restricted','Restricted')
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message= FALSE)
library(tidyverse)
library(ggplot2)
ggAppData <- read.csv("./Data/googleplaystore.csv")
str(ggAppData)
googlePS <-as.data.frame(ggAppData)
googlePlay <- googlePS[complete.cases(googlePS),]
#Kiểm tra và xóa giá trị nhập lỗi trong dataset
googlePlay<-googlePlay[googlePlay$Rating<=5,]
q1<-googlePlay[googlePlay$Category==c('GAME','BUSINESS','EDUCATION','ENTERTAINMENT','LIFESTYLE','DATING'),]
## Side by side boxplot
ggplot(data = q1, aes(x = Category, y = Rating),ylim=c(0,5)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa các danh mục ứng dụng")
# Biểu đồ Histogram
xbar <- tapply(q1$Rating, q1$Category, mean)
s <- tapply(q1$Rating, q1$Category, sd)
q1$normal.density <- apply(q1, 1, function(x){
dnorm(as.numeric(x["Rating"]),
xbar[x["Category"]], s[x["Category"]])})
ggplot(q1, aes(x = Rating)) +
geom_histogram(aes(y = ..density..),
bins = 20,
fill = "grey", col = "black") +
facet_grid(Category ~ .) +
geom_density(col = "red", lwd = 1) +
geom_line(aes(y = normal.density), col = "blue", lwd = 1) +
ggtitle("Biểu đồ hàm mật độ phân phối xác suất")
# Biểu đồ QQ plot
q1$intercept <- apply(q1, 1, function(x){xbar[x["Category"]]})
q1$slope <- apply(q1, 1, function(x){s[x["Category"]]})
ggplot(q1, aes(sample = Rating)) +
stat_qq() +
facet_grid(Category ~ .) +
geom_abline(data = q1, aes(intercept = intercept, slope = slope)) +
ggtitle("Biểu đồ QQPlot so sánh phân bố các mẫu với phân phối chuẩn")
# ANOVA test
fit <- aov(Rating ~ Category, data = q1)
summary(fit)
TukeyHSD(fit, conf.level = 0.95)
googlePlay$Content.Rating<-ifelse(googlePlay$googlePlay=='Everyone','Non-restricted','Restricted')
googlePlay$Content.Rating<-ifelse(googlePlay$googlePlay=='Everyone','Non-restricted','Restricted')
googlePlay$Content.Rating<-ifelse(googlePlay$googlePlay=='Everyone','Non-restricted','Restricted')
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
googlePlay$Content.Rating
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
table(googlePlay$Content.Rating)
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
fun(googlePlay$Content.Rating)
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
table(googlePlay$Content.Rating)
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
count(googlePlay$Content.Rating)
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
count.fields(googlePlay$Content.Rating)
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
count.fields(googlePlay$Content.Rating,sep = ":")
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
table(googlePlay)
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
table(googlePlay$Content.Rating)
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
as.data.frame(table(googlePlay$Content.Rating))
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
tabulate(googlePlay$Content.Rating)
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
tabulate(googlePlay)
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
as.data.frame(table(googlePlay))
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
numbertable <-table(googlePlay$Content.Rating))
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
numbertable <-table(googlePlay$Content.Rating)
numbertable[as.character(x)]
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
summary (googlePlay$Content.Rating)
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
summary (googlePlay)
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
data.frame(table(googlePlay$Content.Rating))
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Side by Side Boxplots of Rating Among Restricted and Non-Restricted")
# Histogram of data
xbar <- tapply(googlePlay$Rating, googlePlay$Content.Rating, mean)
s <- tapply(googlePlay$Rating, googlePlay$Content.Rating, sd)
googlePlay$normal.density <- apply(googlePlay, 1, function(x){
dnorm(as.numeric(x["Rating"]),
xbar[x["Content Rating"]], s[x["Content Rating"]])})
ggplot(googlePlay, aes(x = Rating)) +
geom_histogram(aes(y = ..density..),
# bins = sqrt(nrow(bike)) + 2,
bins = 20,
fill = "grey", col = "black") +
facet_grid(Content.Rating ~ .) +
geom_density(col = "red", lwd = 1) +
geom_line(aes(y = normal.density), col = "blue", lwd = 1) +
ggtitle("Histograms of Rating Among Restricted and Non-Restricted")
# QQ Plot of data
googlePlay$intercept <- apply(googlePlay, 1, function(x){xbar[x["Content Rating"]]})
googlePlay$slope <- apply(googlePlay, 1, function(x){s[x["Content Rating"]]})
ggplot(googlePlay, aes(sample = Rating)) +
stat_qq() +
facet_grid(Content.Rating ~ .) +
geom_abline(data = googlePlay, aes(intercept = intercept, slope = slope)) +
ggtitle("QQ Plots of Rating Among Restricted and Non-Restricted")
# t-Test
t.test(googlePlay$Rating ~ googlePlay$Content.Rating, mu = 0, conf.level = 0.95,
paired = FALSE, alternative = "two.sided", var.equal = FALSE)
table(googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted'))
#data.frame(table(googlePlay$Content.Rating))
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
table(googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted'))
#data.frame(table(googlePlay$Content.Rating))
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
# Histogram of data
xbar <- tapply(googlePlay$Rating, googlePlay$Content.Rating, mean)
s <- tapply(googlePlay$Rating, googlePlay$Content.Rating, sd)
googlePlay$normal.density <- apply(googlePlay, 1, function(x){
dnorm(as.numeric(x["Rating"]),
xbar[x["Content Rating"]], s[x["Content Rating"]])})
ggplot(googlePlay, aes(x = Rating)) +
geom_histogram(aes(y = ..density..),
bins = 20,
fill = "grey", col = "black") +
facet_grid(Content.Rating ~ .) +
geom_density(col = "red", lwd = 1) +
geom_line(aes(y = normal.density), col = "blue", lwd = 1) +
ggtitle("Biểu đồ hàm mật độ phân phối xác suất")
# QQ Plot of data
googlePlay$intercept <- apply(googlePlay, 1, function(x){xbar[x["Content Rating"]]})
googlePlay$slope <- apply(googlePlay, 1, function(x){s[x["Content Rating"]]})
ggplot(googlePlay, aes(sample = Rating)) +
stat_qq() +
facet_grid(Content.Rating ~ .) +
geom_abline(data = googlePlay, aes(intercept = intercept, slope = slope)) +
ggtitle("Biểu đồ QQPLot so sánh phân bố mẫu với phân phối chuẩn")
table(googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted'))
googlePlay$Content.Rating
googlePlay$Content.Rating
googlePlay$Content.Rating<-ifelse(googlePlay$Content.Rating=='Everyone','Non-restricted','Restricted')
data.frame(table(googlePlay$Content.Rating))
# Side by side boxplot of data
ggplot(data = googlePlay, aes(x = Content.Rating, y = Rating)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar") +
stat_summary(fun.y = mean, col = "black", geom = "point", size = 3) +
ggtitle("Biểu đồ Boxplots so sánh rating giữa hai loại ứng dụng")
library(tidyverse)
library(ggplot2)
ggAppData <- read.csv("./Data/googleplaystore.csv")
str(ggAppData)
data.frame(table(ggAppData))
library(tidyverse)
library(ggplot2)
ggAppData <- read.csv("./Data/googleplaystore.csv")
#str(ggAppData)
data.frame(table(ggAppData))
library(tidyverse)
library(ggplot2)
ggAppData <- read.csv("./Data/googleplaystore.csv")
#str(ggAppData)
data.frame(table(ggAppData$Content.Rating))
library(tidyverse)
library(ggplot2)
ggAppData <- read.csv("./Data/googleplaystore.csv")
#str(ggAppData)
table(ggAppData$Content.Rating)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
ggAppData <- read.csv("./Data/googleplaystore.csv")
table(ggAppData$Rating.Content)
head(ggAppData[ggAppData$Category=='ART_AND_DESIGN',c(2,3)],10)
head(ggAppData[ggAppData$Category=='EDUCATION',c(2,3)],10)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message= FALSE)
library(tidyverse)
library(ggplot2)
ggAppData <- read.csv("./Data/googleplaystore.csv")
str(ggAppData)
table(ggAppData$Rating.Content)
library(tidyverse)
library(ggplot2)
ggAppData <- read.csv("./Data/googleplaystore.csv")
str(ggAppData)
table(ggAppData$Content.Rating)
